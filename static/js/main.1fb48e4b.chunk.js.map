{"version":3,"sources":["reducers/cart.js","constants/ActionTypes.js","reducers/products.js","reducers/index.js","utils/TaxRules.js","api/shop.js","actions/index.js","utils/CurrencyFormatter.js","components/Product.js","components/Button.js","components/ProductItem.js","components/ProductsList.js","containers/ProductsContainer.js","components/CartControl.js","components/Cart.js","components/Modal.js","containers/CartContainer.js","containers/App.js","index.js"],"names":["initialState","addedIds","quantityById","state","arguments","length","undefined","action","type","indexOf","productId","concat","Object","toConsumableArray","filter","id","newQuantity","objectSpread","defineProperty","cart","reducers_products","combineReducers","byId","products","reduce","obj","product","inventory","newInventory","visibleIds","map","getProduct","getVisibleProducts","reducers","getAddedIds","fromCart","getQuantity","fromProducts","getSubtotalUnformatted","total","price","getSubtotal","toFixed","getTaxUnformatted","getTax","getTotal","getCartProducts","quantity","shop","cb","timeout","fetch","then","response","json","error","console","log","i","push","title","productTitle","value","image","toLowerCase","payload","setTimeout","updateInventoryUnsafe","CurrencyFormatter","Product","_ref","displayInventory","children","react_default","a","createElement","className","src","alt","defaultProps","Button","styleName","disabled","onClick","ProductItem","onAddToCartClicked","src_components_Product","src_components_Button","ProductsList","connect","addToCart","dispatch","getState","addToCartUnsafe","src_components_ProductsList","src_components_ProductItem","key","CartControl","newValue","parseInt","this","props","modify","_this","_this$props","reserves","onQuantityChange","event","target","select","onChange","React","Component","Cart","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","breakpoint","createRef","handleCartResize","bind","assertThisInitialized","renderCartControls","cartWidth","_this2","setState","current","clientWidth","window","addEventListener","removeEventListener","_this3","src_components_CartControl","modifyQuantity","_this4","subtotal","tax","onCheckoutClicked","width","hasProducts","nodes","ref","Modal","el","document","handleKeyUp","modalRoot","getElementById","e","onCloseRequest","keys","27","preventDefault","keyCode","appendChild","removeChild","createPortal","CartContainer","showModal","toggleModal","checkout","cartQuantity","b","src_components_Modal","focus_trap_react_default","src_components_Cart","productInventory","modifyQuantityUnsafe","removeCartItemUnsafe","App","src_containers_CartContainer","containers_ProductsContainer","middleware","thunk","store","createStore","reducer","applyMiddleware","apply","receiveProducts","render","react_redux_es","src_containers_App"],"mappings":"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","file":"static/js/main.1fb48e4b.chunk.js","sourcesContent":["import {\n  ADD_TO_CART,\n  CHECKOUT_REQUEST,\n  CHECKOUT_FAILURE,\n  MODIFY_QUANTITY,\n  REMOVE_CART_ITEM\n} from '../constants/ActionTypes'\n\nconst initialState = {\n  addedIds: [],\n  quantityById: {}\n}\n\nconst addedIds = (state = initialState.addedIds, action) => {\n  switch (action.type) {\n    case ADD_TO_CART:\n      if (state.indexOf(action.productId) !== -1) {\n        return state\n      }\n      return [...state, action.productId]\n    case REMOVE_CART_ITEM:\n      if (state.indexOf(action.productId) === -1) {\n        return state\n      }\n      return state.filter(id => id !== action.productId)\n    default:\n      return state\n  }\n}\n\nconst quantityById = (state = initialState.quantityById, action) => {\n  const { productId } = action\n  switch (action.type) {\n    case REMOVE_CART_ITEM:\n      action.newQuantity = 0\n      return { ...state, [productId]: action.newQuantity }\n    case MODIFY_QUANTITY:\n      return { ...state, [productId]: action.newQuantity }\n    case ADD_TO_CART:\n      return { ...state, [productId]: (state[productId] || 0) + 1 }\n    default:\n      return state\n  }\n}\n\nexport const getQuantity = (state, productId) =>\n  state.quantityById[productId] || 0\n\nexport const getAddedIds = state => state.addedIds\n\nconst cart = (state = initialState, action) => {\n  switch (action.type) {\n    case CHECKOUT_REQUEST:\n      return initialState\n    case CHECKOUT_FAILURE:\n      return action.cart\n    default:\n      return {\n        addedIds: addedIds(state.addedIds, action),\n        quantityById: quantityById(state.quantityById, action)\n      }\n  }\n}\n\nexport default cart\n","export const ADD_TO_CART = 'ADD_TO_CART'\nexport const MODIFY_QUANTITY = 'MODIFY_QUANTITY'\nexport const REMOVE_CART_ITEM = 'REMOVE_CART_ITEM'\nexport const UPDATE_INVENTORY = 'UPDATE_INVENTORY'\nexport const CHECKOUT_REQUEST = 'CHECKOUT_REQUEST'\nexport const CHECKOUT_SUCCESS = 'CHECKOUT_SUCCESS'\nexport const CHECKOUT_FAILURE = 'CHECKOUT_FAILURE'\nexport const RECEIVE_PRODUCTS = 'RECEIVE_PRODUCTS'\n","import { combineReducers } from 'redux'\nimport {\n  RECEIVE_PRODUCTS,\n  ADD_TO_CART,\n  UPDATE_INVENTORY\n} from '../constants/ActionTypes'\n\nconst products = (state, action) => {\n  switch (action.type) {\n    case UPDATE_INVENTORY:\n      return {\n        ...state,\n        inventory: action.newInventory\n      }\n    case ADD_TO_CART:\n      return {\n        ...state,\n        inventory: state.inventory - 1\n      }\n    default:\n      return state\n  }\n}\n\nconst byId = (state = {}, action) => {\n  switch (action.type) {\n    case RECEIVE_PRODUCTS:\n      return {\n        ...state,\n        ...action.products.reduce((obj, product) => {\n          obj[product.id] = product\n          return obj\n        }, {})\n      }\n    default:\n      const { productId } = action\n      if (productId) {\n        return {\n          ...state,\n          [productId]: products(state[productId], action)\n        }\n      }\n      return state\n  }\n}\n\nconst visibleIds = (state = [], action) => {\n  switch (action.type) {\n    case RECEIVE_PRODUCTS:\n      return action.products.map(product => product.id)\n    default:\n      return state\n  }\n}\n\nexport default combineReducers({\n  byId,\n  visibleIds\n})\n\nexport const getProduct = (state, id) => state.byId[id]\n\nexport const getVisibleProducts = state =>\n  state.visibleIds.map(id => getProduct(state, id))\n","import { combineReducers } from 'redux'\nimport cart, * as fromCart from './cart'\nimport products, * as fromProducts from './products'\nimport { TaxRate } from '../utils/TaxRules'\nexport default combineReducers({\n  cart,\n  products\n})\n\nconst getAddedIds = state => fromCart.getAddedIds(state.cart)\nconst getQuantity = (state, id) => fromCart.getQuantity(state.cart, id)\nconst getProduct = (state, id) => fromProducts.getProduct(state.products, id)\n\nconst getSubtotalUnformatted = state =>\n  getAddedIds(state).reduce(\n    (total, id) => total + getProduct(state, id).price * getQuantity(state, id),\n    0\n  )\n\nexport const getSubtotal = state => getSubtotalUnformatted(state).toFixed(2)\n\nconst getTaxUnformatted = state => getSubtotalUnformatted(state) * TaxRate\n\nexport const getTax = state => getTaxUnformatted(state).toFixed(2)\n\nexport const getTotal = state =>\n  (getSubtotalUnformatted(state) + getTaxUnformatted(state)).toFixed(2)\n\nexport const getCartProducts = state =>\n  getAddedIds(state).map(id => ({\n    ...getProduct(state, id),\n    quantity: getQuantity(state, id)\n  }))\n","export const TaxRate = 0.08875\n","/**\n * Mocking client-server processing\n */\nimport fetch from 'cross-fetch'\n\nconst TIMEOUT = 100\n\nexport default {\n  getProducts: (cb, timeout) => {\n    fetch('http://tech.work.co/shopping-cart/products.json')\n      .then(\n        response => response.json(),\n        error => console.log('An error occurred.', error)\n      )\n      .then(json => {\n        let products = []\n        for (let i = 0; i < json.length; i++) {\n          products.push({\n            id: json[i].id,\n            title: json[i].productTitle,\n            price: json[i].price.value,\n            inventory: json[i].inventory,\n            image: `/images/${json[i].productTitle.toLowerCase()}.jpg`\n          })\n        }\n        cb(products)\n      })\n  },\n  buyProducts: (payload, cb, timeout) =>\n    setTimeout(() => cb(), timeout || TIMEOUT)\n}\n","import shop from '../api/shop'\nimport * as types from '../constants/ActionTypes'\n\nconst receiveProducts = products => ({\n  type: types.RECEIVE_PRODUCTS,\n  products: products\n})\n\nexport const getAllProducts = () => dispatch => {\n  shop.getProducts(products => {\n    dispatch(receiveProducts(products))\n  })\n}\n\nconst addToCartUnsafe = productId => ({\n  type: types.ADD_TO_CART,\n  productId\n})\n\nexport const addToCart = productId => (dispatch, getState) => {\n  if (getState().products.byId[productId].inventory > 0) {\n    dispatch(addToCartUnsafe(productId))\n  }\n}\n\nconst removeCartItemUnsafe = productId => ({\n  type: types.REMOVE_CART_ITEM,\n  productId\n})\n\nconst updateInventoryUnsafe = (productId, newInventory) => ({\n  type: types.UPDATE_INVENTORY,\n  productId,\n  newInventory\n})\n\nconst modifyQuantityUnsafe = (productId, newQuantity) => ({\n  type: types.MODIFY_QUANTITY,\n  productId,\n  newQuantity\n})\n\nexport const modifyQuantity = (productId, newQuantity) => (\n  dispatch,\n  getState\n) => {\n  const inventory = getState().products.byId[productId].inventory\n  const quantity = getState().cart.quantityById[productId]\n  const newInventory = inventory + quantity - newQuantity\n  if (newQuantity > 0 && newQuantity <= inventory + quantity) {\n    dispatch(modifyQuantityUnsafe(productId, newQuantity))\n    dispatch(updateInventoryUnsafe(productId, newInventory))\n  } else if (newQuantity === 0) {\n    dispatch(removeCartItemUnsafe(productId))\n    dispatch(updateInventoryUnsafe(productId, newInventory))\n  }\n}\n\nexport const checkout = products => (dispatch, getState) => {\n  const { cart } = getState()\n\n  dispatch({\n    type: types.CHECKOUT_REQUEST\n  })\n  shop.buyProducts(products, () => {\n    dispatch({\n      type: types.CHECKOUT_SUCCESS,\n      cart\n    })\n    // Replace the line above with line below to rollback on failure:\n    // dispatch({ type: types.CHECKOUT_FAILURE, cart })\n  })\n}\n","export const CurrencyFormatter = price => {\n  return `$${price}`\n}\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { CurrencyFormatter } from '../utils/CurrencyFormatter'\nimport './Product.scss'\n\nconst Product = ({\n  price,\n  inventory,\n  title,\n  image,\n  displayInventory,\n  children\n}) => (\n  <div className=\"Product\">\n    <div className=\"image\">\n      <img src={image} alt={title} />\n    </div>\n    <div className=\"info\">\n      <div className=\"info-title-price\">\n        <h2>{title}</h2>\n        <span className=\"price\">{CurrencyFormatter(price)}</span>\n      </div>\n      {inventory >= 0 && displayInventory ? (\n        <div className=\"inventory-wrapper\">\n          <span className=\"inventory\">\n            {inventory > 0 ? `${inventory} Remaining` : 'Out of Stock'}\n          </span>\n        </div>\n      ) : null}\n      {children}\n    </div>\n  </div>\n)\n\nProduct.propTypes = {\n  price: PropTypes.number,\n  inventory: PropTypes.number,\n  title: PropTypes.string,\n  image: PropTypes.string,\n  displayInventory: PropTypes.bool,\n  children: PropTypes.node\n}\n\nProduct.defaultProps = {\n  displayInventory: true\n}\n\nexport default Product\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport './Button.scss'\n\nconst Button = ({ children, styleName, disabled, onClick }) => (\n  <button\n    className={`Button${styleName ? ' ' + styleName : ''}`}\n    onClick={onClick}\n    disabled={disabled}\n  >\n    {children}\n  </button>\n)\n\nButton.propTypes = {\n  children: PropTypes.node,\n  styleName: PropTypes.string,\n  disabled: PropTypes.bool,\n  onClick: PropTypes.func\n}\n\nexport default Button\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport Product from './Product'\nimport Button from './Button'\nimport './ProductItem.scss'\n\nconst ProductItem = ({ product, onAddToCartClicked }) => (\n  <div className=\"ProductItem\">\n    <Product\n      title={product.title}\n      price={product.price}\n      inventory={product.inventory}\n      image={product.image}\n    >\n      <Button\n        styleName=\"primary add-to-cart\"\n        onClick={onAddToCartClicked}\n        disabled={product.inventory === 0}\n      >\n        {product.inventory > 0 ? 'Add to cart' : 'Sold Out'}\n      </Button>\n    </Product>\n  </div>\n)\n\nProductItem.propTypes = {\n  product: PropTypes.shape({\n    title: PropTypes.string.isRequired,\n    price: PropTypes.number.isRequired,\n    inventory: PropTypes.number.isRequired\n  }).isRequired,\n  onAddToCartClicked: PropTypes.func.isRequired\n}\n\nexport default ProductItem\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport './ProductsList.scss'\n\nconst ProductsList = ({ children }) => (\n  <div className=\"ProductsList\">\n    <div>{children}</div>\n  </div>\n)\n\nProductsList.propTypes = {\n  children: PropTypes.node\n}\n\nexport default ProductsList\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux'\nimport { addToCart } from '../actions'\nimport { getVisibleProducts } from '../reducers/products'\nimport ProductItem from '../components/ProductItem'\nimport ProductsList from '../components/ProductsList'\n\nconst ProductsContainer = ({ products, addToCart }) => (\n  <ProductsList title=\"Products\">\n    {products.length ? (\n      products.map(product => (\n        <ProductItem\n          key={product.id}\n          product={product}\n          onAddToCartClicked={() => addToCart(product.id)}\n        />\n      ))\n    ) : (\n      <span>Loading Products...</span>\n    )}\n  </ProductsList>\n)\n\nProductsContainer.propTypes = {\n  products: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      title: PropTypes.string.isRequired,\n      price: PropTypes.number.isRequired,\n      inventory: PropTypes.number.isRequired\n    })\n  ).isRequired,\n  addToCart: PropTypes.func.isRequired\n}\n\nconst mapStateToProps = state => ({\n  products: getVisibleProducts(state.products)\n})\n\nexport default connect(\n  mapStateToProps,\n  { addToCart }\n)(ProductsContainer)\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport Button from './Button'\nimport './CartControl.scss'\n\nclass CartControl extends React.Component {\n  onQuantityChange(newValue) {\n    newValue = parseInt(newValue, 10)\n    if (newValue) {\n      this.props.modify(newValue)\n    }\n  }\n\n  render() {\n    const { value, reserves } = this.props\n    return (\n      <div className=\"CartControl\">\n        <Button\n          styleName=\"secondary decrease-btn\"\n          onClick={() => this.onQuantityChange(value - 1)}\n          disabled={value - 1 === 0}\n        >\n          <span className=\"decrease-icon\" />\n          <span className=\"hidden\">Decrease</span>\n        </Button>\n        <label>\n          <span className=\"hidden\">Quantity:</span>\n          <input\n            value={value}\n            onClick={event => {\n              event.target.select()\n            }}\n            onChange={event => this.onQuantityChange(event.target.value)}\n          />\n        </label>\n        <Button\n          styleName=\"secondary right\"\n          onClick={() => this.onQuantityChange(value + 1)}\n          disabled={reserves === 0}\n        >\n          <span className=\"increase-icon\" />\n          <span className=\"hidden\">Increase</span>\n        </Button>\n      </div>\n    )\n  }\n}\n\nCartControl.propTypes = {\n  modify: PropTypes.func.isRequired,\n  value: PropTypes.number.isRequired,\n  reserves: PropTypes.number\n}\n\nexport default CartControl\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport Product from './Product'\nimport Button from './Button'\nimport CartControl from './CartControl'\nimport { CurrencyFormatter } from '../utils/CurrencyFormatter'\nimport './Cart.scss'\n\nclass Cart extends React.Component {\n  constructor(props) {\n    super(props)\n    this.breakpoint = 700\n    this.cart = React.createRef()\n    this.handleCartResize = this.handleCartResize.bind(this)\n    this.renderCartControls = this.renderCartControls.bind(this)\n    this.state = {\n      cartWidth: 0\n    }\n  }\n\n  componentDidMount() {\n    setTimeout(() => {\n      this.setState({\n        cartWidth: this.cart.current.clientWidth\n      })\n    }, 1)\n\n    window.addEventListener('resize', this.handleCartResize)\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('resize', this.handleCartResize)\n  }\n\n  handleCartResize() {\n    this.setState({\n      cartWidth: this.cart.current.clientWidth\n    })\n  }\n\n  renderCartControls(product) {\n    return (\n      <CartControl\n        modify={newValue => {\n          this.props.modifyQuantity(product.id, newValue)\n        }}\n        value={product.quantity}\n        reserves={product.inventory}\n      />\n    )\n  }\n\n  render() {\n    const {\n      products,\n      subtotal,\n      tax,\n      total,\n      onCheckoutClicked,\n      modifyQuantity\n    } = this.props\n    const width = this.state.cartWidth\n    const hasProducts = products.length > 0\n    const nodes = hasProducts ? (\n      products.map(product => (\n        <div className=\"cart-item\" key={product.id}>\n          <Product\n            title={product.title}\n            price={product.price}\n            quantity={product.quantity}\n            inventory={product.inventory}\n            image={product.image}\n            displayInventory={false}\n          >\n            {width > this.breakpoint ? this.renderCartControls(product) : null}\n            <Button\n              styleName=\"text-link remove-btn\"\n              onClick={() => modifyQuantity(product.id, 0)}\n            >\n              Remove\n            </Button>\n          </Product>\n          {width <= this.breakpoint ? (\n            <CartControl\n              modify={newValue => {\n                this.props.modifyQuantity(product.id, newValue)\n              }}\n              value={product.quantity}\n              reserves={product.inventory}\n            />\n          ) : null}\n        </div>\n      ))\n    ) : (\n      <div className=\"no-items\">\n        <span className=\"icon-shopping-cart\" />\n        <span>Please add some products to your cart.</span>\n      </div>\n    )\n\n    return (\n      <div className=\"Cart\" ref={this.cart}>\n        <div className=\"items\">\n          <h2>Your Cart</h2>\n          <div className={`cart-items ${hasProducts ? 'column' : 'row'}`}>\n            {nodes}\n          </div>\n          {hasProducts && (\n            <div className=\"totals\">\n              <div className=\"subtotal\">\n                <span>Subtotal:</span>\n                <span>{CurrencyFormatter(subtotal)}</span>\n              </div>\n              <div className=\"tax\">\n                <span>Tax:</span>\n                <span>{CurrencyFormatter(tax)}</span>\n              </div>\n              <div className=\"grand-total\">\n                <span>Total:</span>\n                <span>{CurrencyFormatter(total)}</span>\n              </div>\n            </div>\n          )}\n        </div>\n        {hasProducts && (\n          <Button\n            styleName=\"primary checkout-btn\"\n            onClick={onCheckoutClicked}\n            disabled={!hasProducts}\n          >\n            Checkout\n          </Button>\n        )}\n      </div>\n    )\n  }\n}\n\nCart.propTypes = {\n  products: PropTypes.array,\n  subtotal: PropTypes.string,\n  tax: PropTypes.string,\n  total: PropTypes.string,\n  onCheckoutClicked: PropTypes.func,\n  modifyQuantity: PropTypes.func\n}\n\nexport default Cart\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { createPortal } from 'react-dom'\nimport './Modal.scss'\n\nclass Modal extends React.Component {\n  constructor(props) {\n    super(props)\n    this.el = document.createElement('div')\n    this.handleKeyUp = this.handleKeyUp.bind(this)\n    this.modalRoot = document.getElementById('modal')\n  }\n\n  handleKeyUp(e) {\n    const { onCloseRequest } = this.props\n    const keys = {\n      27: () => {\n        e.preventDefault()\n        onCloseRequest()\n        window.removeEventListener('keyup', this.handleKeyUp, false)\n      }\n    }\n\n    if (keys[e.keyCode]) {\n      keys[e.keyCode]()\n    }\n  }\n\n  componentDidMount() {\n    window.addEventListener('keyup', this.handleKeyUp, false)\n    this.modalRoot.appendChild(this.el)\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('keyup', this.handleKeyUp, false)\n    this.modalRoot.removeChild(this.el)\n  }\n\n  render() {\n    return createPortal(this.props.children, this.el)\n  }\n}\n\nModal.propTypes = {\n  children: PropTypes.node,\n  onCloseRequest: PropTypes.func\n}\n\nexport default Modal\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux'\nimport FocusTrap from 'focus-trap-react'\nimport { checkout, modifyQuantity } from '../actions'\nimport { getTotal, getCartProducts, getSubtotal, getTax } from '../reducers'\nimport Cart from '../components/Cart'\nimport Button from '../components/Button'\nimport Modal from '../components/Modal'\nimport './CartContainer.scss'\nimport { getVisibleProducts } from '../reducers/products'\n\nclass CartContainer extends React.Component {\n  state = { showModal: false }\n  toggleModal = () => this.setState({ showModal: !this.state.showModal })\n  render() {\n    const { showModal } = this.state\n    const {\n      products,\n      subtotal,\n      tax,\n      total,\n      checkout,\n      modifyQuantity\n    } = this.props\n    const hasProducts = products.length > 0\n    const cartQuantity = products\n      .map(product => product.quantity)\n      .reduce((a, b) => a + b, 0)\n    return (\n      <div className=\"CartContainer\">\n        <Button className=\"text-link\" onClick={this.toggleModal}>\n          <span className=\"icon-shopping-cart\" />\n          {hasProducts ? `View Cart (${cartQuantity})` : 'Your cart is empty'}\n        </Button>\n        {showModal ? (\n          <Modal onCloseRequest={this.toggleModal}>\n            <FocusTrap>\n              <div className=\"focus-trap\">\n                <Button styleName=\"close-cart\" onClick={this.toggleModal}>\n                  <span className=\"hidden\">Close Cart</span>\n                </Button>\n                <Cart\n                  products={products}\n                  subtotal={subtotal}\n                  tax={tax}\n                  total={total}\n                  onCheckoutClicked={() => checkout(products)}\n                  modifyQuantity={modifyQuantity}\n                />\n              </div>\n            </FocusTrap>\n          </Modal>\n        ) : null}\n      </div>\n    )\n  }\n}\n\nCartContainer.propTypes = {\n  products: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      title: PropTypes.string.isRequired,\n      price: PropTypes.number.isRequired,\n      quantity: PropTypes.number.isRequired\n    })\n  ).isRequired,\n  subtotal: PropTypes.string,\n  tax: PropTypes.string,\n  total: PropTypes.string,\n  checkout: PropTypes.func.isRequired,\n  modifyQuantity: PropTypes.func.isRequired\n}\n\nconst mapStateToProps = state => ({\n  products: getCartProducts(state),\n  productInventory: getVisibleProducts(state.products),\n  subtotal: getSubtotal(state),\n  tax: getTax(state),\n  total: getTotal(state)\n})\n\nexport default connect(\n  mapStateToProps,\n  { checkout, modifyQuantity }\n)(CartContainer)\n","import React from 'react'\nimport 'react-app-polyfill/ie11'\nimport ProductsContainer from './ProductsContainer'\nimport CartContainer from './CartContainer'\nimport './App.scss'\n\nconst App = () => (\n  <div>\n    <div className=\"store-header\">\n      <h1>Acme Store</h1>\n      <CartContainer />\n    </div>\n    <ProductsContainer />\n  </div>\n)\n\nexport default App\n","import React from 'react'\nimport { render } from 'react-dom'\nimport { createStore, applyMiddleware } from 'redux'\nimport { Provider } from 'react-redux'\nimport { createLogger } from 'redux-logger'\nimport thunk from 'redux-thunk'\nimport reducer from './reducers'\nimport { getAllProducts } from './actions'\nimport App from './containers/App'\n\nconst middleware = [thunk]\nif (process.env.NODE_ENV !== 'production') {\n  middleware.push(createLogger())\n}\n\nconst store = createStore(reducer, applyMiddleware(...middleware))\n\nstore.dispatch(getAllProducts())\n\nrender(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}